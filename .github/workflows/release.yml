# SPDX-FileCopyrightText: 2023 iteratec GmbH
#
# SPDX-License-Identifier: Apache-2.0

# This workflow will publish a Java project with Gradle
# For maven build see: https://github.com/marketplace/actions/gradle-build-action
# For maven publishing see: https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-maven

name: Publish Release

# If input is empty we automatically bump the version
on:
  workflow_dispatch:
    inputs:
      customversion:
        description: 'Custom version'
        required: false
        default: ''

env:
  CUSTOM_VERSION: '' # If not empty, use as new version

jobs:
  publish-release-custom:
    runs-on: ubuntu-22.04
    if: !contains(github.event.head_commit.message, '[secureCodeBoxBot]')
    steps:
      - name: Custom version
        if ${{ github.event.inputs.customversion != '' }}
        run: |
          echo 'CUSTOM_VERSION=${{ github.event.inputs.customversion }}' >> "$GITHUB_ENV"
          echo "Releasing custom version ${{ github.event.inputs.customversion }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Build & Test # Test must succeed before releasing
        run: ./mvnw -B test

      - name: Bump version & Publish to Maven Central
        uses: qcastel/github-actions-maven-cmd@v1.12.31
        with:
          git-release-bot-name: secureCodeBoxBot
          git-release-bot-email: securecodebox@iteratec.com

          maven-args: -P release # Use the release profile

          gpg-enabled: true
          gpg-key: ${{ secrets.GPG_COMMITS_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_COMMITS_PASSPHRASE }}
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SIGNING_PASSWORD }}

      # TODO: Maybe create release in GitHub?

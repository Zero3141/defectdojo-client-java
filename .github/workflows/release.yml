# SPDX-FileCopyrightText: 2023 iteratec GmbH
#
# SPDX-License-Identifier: Apache-2.0

# This workflow will publish a Java project with Gradle
# For maven build see: https://github.com/marketplace/actions/gradle-build-action
# For maven publishing see: https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-maven

name: Publish Release

# If input is empty we automatically bump the version
on:
  workflow_dispatch:
    inputs:
      customversion:
        description: 'Custom version'
        required: false
        default: ''

jobs:
  publish-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Releasing custom version
        if: github.event.inputs.customversion != ''
        run: echo "Releasing version ${{ github.event.inputs.customversion }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Prepare wrapper
        run: chmod +x mvnw

      - name: Test # Test must succeed before creating a release scm tag
        run: ./mvnw -B test

      - name: Bump custom version # Optional: only run if custom version is set
        if: github.event.inputs.customversion != ''
        run: ./mvnw versions:set -DnewVersion=${{ github.event.inputs.customversion }}

      - name: Publish to Maven Central
        uses: qcastel/github-actions-maven-release@master
        # run: ./mvnw -U -B clean deploy -P release # -U: force dependency updates , -B: no user input, -P: profile
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SIGNING_PASSWORD }}
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk/ # Required by github-actions-maven-release
        with:
            git-release-bot-name: "secureCodeBoxBot"
            git-release-bot-email: "securecodebox@iteratec.com"

            # gpg key of bot account (needs push permissions)
            gpg-enabled: true
            gpg-key: ${{ secrets.GPG_COMMITS_PRIVATE_KEY }}
            gpg-passphrase: ${{ secrets.GPG_COMMITS_PASSPHRASE }}


        # TODO: Maybe create release in GitHub?
